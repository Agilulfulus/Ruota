load "System";

# Clear the console and set color
os.system("cls");
os.color(Colors.BRIGHT_GREEN);

# Declare variables
map_size := 15;
pos_x := 5;
pos_y := 5;
dir := 0;
new_dir := 0;
score := 0;
map := alloc map_size;
buffer := alloc map_size;

# Set map to 0
i in [0 : map_size] do {
	map[i] = alloc map_size;
	buffer[i] = alloc map_size;
	j in [0 : map_size] do {
		map[i][j] = 0;
		buffer[i][j] = 0;
	};
};

# Add first fruit
map[10][10] = -1;

# Declare functions
drawBlock(x, y, s) => {
	os.printat(x * 2, y, s);
};

drawMap() => {
	i in [0 : len map] do {
		j in [0 : len map[i]] do {
			buffer[i][j] != map[i][j] then {
				map[i][j] == 0 then drawBlock(i + 2, j + 2, ' ');
				map[i][j] == -1 then drawBlock(i + 2, j + 2, '+');
			}
		};
	};
	buffer = map;

	char := (dir switch {
	0 >> '<';
	1 >> 'V';
	2 >> '>';
	3 >> '^';
	});
	drawBlock(pos_x + 2, pos_y + 2, char);
};

keypress() => {
	os.keyDown('A') && dir != 2 then new_dir = 0;
	os.keyDown('S') && dir != 3 then new_dir = 1;
	os.keyDown('D') && dir != 0 then new_dir = 2;
	os.keyDown('W') && dir != 1 then new_dir = 3;
};

control() => q from {
	dir = new_dir;
	i in [0 : len map] do {
		j in [0 : len map[i]] do {
			map[i][j] > 0 then {
				map[i][j] = map[i][j] - 1;
			};
		};
	};

	q = false;

	map[pos_x][pos_y] == -1 then {
		score = score + 1;
		rx := Random.int(map_size - 1);
		ry := Random.int(map_size - 1);
		map[rx][ry] != 0 do {
			rx = Random.int(map_size - 1);
			ry = Random.int(map_size - 1);
		};
		map[rx][ry] = -1;
	} else map[pos_x][pos_y] > 0 then {
		q = true;
		return;
	};

	map[pos_x][pos_y] = score + 1;
	dir switch {
	0 >> pos_x = pos_x - 1;
	1 >> pos_y = pos_y + 1;
	2 >> pos_x = pos_x + 1;
	3 >> pos_y = pos_y - 1;
	};

	pos_x >= len map then q = true;
	pos_x < 0 then q = true;
	pos_y >= len map[0] then q = true;
	pos_y < 0 then q = true;
};

# Draw Border
i in [0 : map_size + 2] do drawBlock(1, i + 1, '#');
i in [0 : map_size + 2] do drawBlock(map_size + 2, i + 1, '#');
i in [0 : map_size + 2] do drawBlock(i + 1, 1, '#');
i in [0 : map_size + 2] do drawBlock(i + 1, map_size + 2, '#');

# Game Loop
timer := 0;
timer_fps := 0;
frames := 0;
!os.keyDown('Q') do {
	frames = frames + 1;
	time_start := os.milli();
	keypress();
	timer > 100 then {
		control() then break;
		drawMap();
		timer = 0;
	};
	drawBlock(1, map_size + 3, "WASD - Score: " .. score);

	timer_fps > 1000 then {
		drawBlock(1, map_size + 4, frames .. " FPS  ");
		frames = 0;
		timer_fps = 0;
	};
	timer = timer + (os.milli() - time_start);
	timer_fps = timer_fps + (os.milli() - time_start);
};
drawMap();
drawBlock(pos_x + 2, pos_y + 2, 'X');