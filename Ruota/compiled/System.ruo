R"RU0(
static os :: {
	system(x) => { _OUTER_CALL_("console.system", x)[0] };
	exit() => { _OUTER_CALL_("console.exit") };
	rawFile(filename) => { _OUTER_CALL_("console.raw_file", filename)[0] };
	milli() => { _OUTER_CALL_("console.milli")[0] };
};

# Returns a paired object array built from the contents of two equally sized arrays
pairs(&a, &b) => p from {
	len a != len b then return;
	p = [];
	i in [0 : len a] do {
		p push struct {
			first :&= a[i]; 
			second :&= b[i];
			string() => { first .. "=" .. second };
		};
	};
};

static Math :: {
	PI := 3.14159265359;
	floor(x) => { _OUTER_CALL_("console.floor", num x)[0] };
	sqrt(x) => { x ** 0.5 };
	max(&a, &b) => { a > b then a else b };
	min(&a, &b) => { a < b then a else b };
	abs(a) => { a < 0 then -a else a };
	round(a, d) => r from {
  		m := 10 ** (d != null then d else 0);
  		r = floor(num a * m + 0.5) / m;
	};
	ceil(a) => { floor(a) == a then a else floor(a) + 1 };

	sum(a) => s from {
		s = 0;
		i in a do {
			s = s + i;
		};
	};
	prod(a) => p from {
		p = 1;
		i in a do {
			p = p * i;
		};
	};
	fact(x) => prod([1:>x]);

	# TRIG
	cos(x, t) => s from {
		x >= 2 * PI do x -= 2 * PI;
		x <= -2 * PI do x += 2 * PI;
		t == null then t = 10;
		s = 0;
		i in [0 : t] do {
			s += (-1 ** i) * (x ** (2 * i)) / fact(2 * i);
		};
	};

	sin(x, t) => s from {
		x >= 2 * PI do x -= 2 * PI;
		x <= -2 * PI do x += 2 * PI;
		t == null then t = 10;
		s = 0;
		i in [0 : t] do {
			s += (-1 ** i) * (x ** (2 * i + 1)) / fact(2 * i + 1);
		};
	};

	tan(x, t) => { sin(x, t) / cos(x, t) };

	exp(x, t) => s from {
		t == null then t = 10;
		s = 0;
		i in [0 : t] do {
			s += (x ** i) / fact(i);
		};
	};
};

static Random :: {
	double() => { _OUTER_CALL_("console.random")[0] };
	int(min, max) => i from {
		max == null then {
			max = min;
			min = 0;
		};
		i = Math.floor(double() * (max - min) + min);
	};
	list(&a) => { a[int(0, len a)] };
};

static Regex :: {
	search(s, e) => { _OUTER_CALL_("regex.search", s, e) };
	replace(s, r, e) => { _OUTER_CALL_("regex.replace", s, r, e)[0] };
};

)RU0"