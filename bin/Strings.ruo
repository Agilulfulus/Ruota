static Strings :: {
	replace(s, a, b) => n_s from {
		i in s ->> {
			i == a then {
				i = b;
			};
		};
		n_s = s;
	};

	split(s, a = ' ') => array from {
		array = [""];
		i in s ->> {
			i == a then {
				array push "";
			} else {
				end array push i;
			};
		};
	};

	remove(s, a) => n_s from {
		n_s = "";
		c in s ->> {
			c != a then n_s ..= c;
		};
	};

	join(array, a = "") => s from {
		s = array[0];
		i in [1 : len array] ->> {
			s ..= a .. array[i];
		};
	};

	find(s, pat) => index from {
		index = -1;
		i in [0 : len s - len pat] ->> {
			str s[i : i + len pat] == pat then {
				index = i;
				return;
			};
		};
	};

	findAll(s, pat) => indices from {
		indices = [];
		i in [0 : len s - len pat] ->> {
			str s[i : i + len pat] == pat then indices push i;
		};
	};
};