struct Map :: {
	local contents = [];

	index(key) => v from {
		i in contents do {
			i.key == key then {
				v := i.value;
				return;
			};
		};
		contents = contents ++ [null];
		local e := contents[#contents];
		e.key = key;
		v := e.value;
	};

	containsKey(key) => b from {
		i in contents do {
			i.key == key then {
				b = true;
				return;
			};
		};
		b = false;
	};

	containsValue(value) => b from {
		i in contents do {
			i.value == value then {
				b = true;
				return;
			};
		};
		b = false;
	};

	iterator() => { contents; };

	size() => { #contents };

	string() => s from {
		s = "[ ";
		e in contents do {
			s = s .. e.key .. "=" .. e.value .. " ";
		};
		s = s .. "]";
	};
};